#!/bin/bash -e
#
# BTTS - BlueTooth Test Suite
#
# Copyright (C) 2014 Jolla Ltd.
# Contact: Martin Kampas <martin.kampas@jollamobile.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 2.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

export BTTS_COMMAND_DIR="/usr/libexec/btts"
export BTTS_PYTHON_LIB_DIR="/usr/lib/btts/python"

usage()
{
	cat <<END
usage: btts [--expect OUTPUT] <command> [command-args]

Bluetooth Test Suite command line utility.

Valid commands:

$(for command in $(btts_commands); do echo -e "\t${command}"; done)

Run 'btts <command> --help' to get help for the specific ommand,

With the '--expect' option the output of the command can be verified to match
the expected value. When passed, the exit code will be 0 only when both the
command's exit code is 0 and its output matches.

Additionally, unless BTTS_RESTRICTED environment variable is defined and not
empty, it is possible to specify an absolute path to any executable in place of
<command> in order to execute it with BTTS environment set.  (The '--expect'
option is ignored in this case.)
END
}

die()
{
	echo "$@" >&2
	exit 1
}

btts_commands()
{
	find ${BTTS_COMMAND_DIR} -mindepth 1 -maxdepth 1 -type f \
		-name 'btts-*' -executable -printf '%f\n' |sed 's/^btts-//' |sort
}

locate_bluez_test_dir()
{
	(shopt -s nullglob; echo /usr/lib*/bluez/test) |head -n1 |grep . \
		|| die "bluez-tests not installed"
}

BLUEZ_TEST_DIR=$(locate_bluez_test_dir)
export PYTHONPATH="${BLUEZ_TEST_DIR}:${PYTHONPATH}"

. ${BTTS_COMMAND_DIR}/environment.sh

export PYTHONPATH="${BTTS_PYTHON_LIB_DIR}:${PYTHONPATH}"

if [[ "$1" == "--expect" ]]
then
  expected="$2"
  shift 2
fi

btts_command="$1"
shift || true

if btts_commands |grep --line-regexp -F -e "${btts_command}" -q
then
  if [[ -z "${expected}" ]]
  then
    exec ${BTTS_COMMAND_DIR}/btts-${btts_command} "${@}"
  else
    output="$(${BTTS_COMMAND_DIR}/btts-${btts_command} "${@}")" || exit
    echo "${output}"
    [[ "${output}" == "${expected}" ]]
    exit
  fi
fi

# Allow exec arbitrary command with BTTS environment
if [[ ${btts_command} =~ ^/ && -x ${btts_command} ]]
then
  if [[ -z "${BTTS_RESTRICTED}" ]]
  then
    exec "${btts_command}" "${@}"
  else
    die "${btts_command}: Disallowed by BTTS_RESTRICTED=${BTTS_RESTRICTED}"
  fi
fi

usage
exit 1
